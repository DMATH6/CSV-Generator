
/*
 * NOTES
 * 
 * NEED TO CLOSE SCANNERS (Might need to re-do the scanners)
 * NEED TO ADD 'try' conditions incase it fails
 * NEED TO STOP USER FROM INPUTING ILLEGAL DATATYPES
 * WORK ON 6TH OPERATION
 * WORK ON PROMPHT OPERATIONS
 * THE FITH AND 6TH OPERATIONS WORK BUT IT ASKS FOR 1 MORE COLOMN THAN ITS SUPPOSE TO
 * (Think it might be because arrays start at 0)
 * DATA GETS CORRUPTED AT FINAL OUTPUT
 */

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.io.FileReader;
import java.io.*;  
import java.lang.Object;


public class GenerateCSV {

	public static void main(String[] args) {

	    //First Operation: Gets the amount of columns that a user wants in their csv file
		boolean opr1 = true;
		int customcolnum = 0;
		while(opr1 == true) {
		
		//String customdatstr = "NULL"; //Not used yet TODO 
		//float customdatnum = 0; //Not used yet TODO 
		//String customdatdate = "00/00/0000"; //No date support in Eclipse
		System.out.println("Enter How Many Coloumns You Would Like Generated?");
		Scanner colnum = new Scanner(System.in);
		customcolnum = colnum.nextInt();
		System.out.println("You Have Entered " + customcolnum + " Coloumns, Continue? YES/NO");
		Scanner yesnoscnr = new Scanner(System.in);	
		char yeschr = yesnoscnr.next("Y|y|N|n").charAt(0);

		
		if (yeschr == 'Y'|| yeschr == 'y') {
			  System.out.println ("YOU HAVE ENTERED YES");
			  customcolnum = customcolnum -1;
			  opr1 = false;
			  //Continue operation
			  break;
			
			}
		
		else if (yeschr == 'N' || yeschr == 'n') {
			  System.out.println ("YOU HAVE ENTERED NO");
			  opr1 = true;
			  //Restart operation
		}
		colnum.close();
		yesnoscnr.close();
		}//First Operation While Loop END

		//Second Operation: Gets the amount of rows that the user wants to be generated
		boolean opr2 = true;
		int customrownum = 0;
		while(opr2 == true) {

			
			
			System.out.println("Please Enter The Maximum Amount Of Rows Generated By This Program");
			Scanner customrownumscnr = new Scanner(System.in);	
				customrownum = customrownumscnr.nextInt();	
				
				System.out.println("You Have Entered " + (customrownum) + " Rows, Continue? YES/NO");	
				
				Scanner yesnoscnr2 = new Scanner(System.in);
				char yeschr2 = yesnoscnr2.next("Y|y|N|n").charAt(0);
					
					
				if (yeschr2 == 'Y'|| yeschr2 == 'y') {
					System.out.println ("YOU HAVE ENTERED YES");
					opr2 = true;
					customrownum = customrownum - 1;
					  //Continue operation
					  break;
						
					}

					else if (yeschr2 == 'N' || yeschr2 == 'n') {
					  System.out.println ("YOU HAVE ENTERED NO");
					  opr2 = false;
					  //Restart operation
						}
					yesnoscnr2.close();
					customrownumscnr.close();
		}//Second Operation While Loop END



//Third Operation: Displays the total amount of columns and rows that a user wants to input into the program

boolean opr3 = true;
char yeschr3 = 'u';
while(opr3 == true) {


	System.out.println((customcolnum + 1) + " Colums and " + (customrownum +1) +  " rows, CONTINUE YES/NO");	

	Scanner yesnoscnr3 = new Scanner(System.in);
	yeschr3 = yesnoscnr3.next("Y|y|N|n").charAt(0);
	
	
	if (yeschr3 == 'Y'|| yeschr3 == 'y') {
	  System.out.println ("YOU HAVE ENTERED YES");
	  opr3 = false;
	  //Continue operation
	  break;
	  
	}
	
	else if (yeschr3 == 'N' || yeschr3 == 'n') {
	  System.out.println ("YOU HAVE ENTERED NO");
	  opr3 = true;
	  //Restarts operation
	}
	yesnoscnr3.close();
}//Third Operation END


//Sixth Operation

ArrayList<String> coldata = new ArrayList<String>();
ArrayList<ArrayList<String>> rowdata = new ArrayList<ArrayList<String>>();
int sixoploop = 0;
int forthoploop = 0;
for(sixoploop = 0; sixoploop <= customrownum;)
{
	//Fourth Operation: Gets the user to enter the data for each column in a row





		Scanner forthopscnr = new Scanner(System.in); //Having issues trying to close it
		//forthopscnr.useDelimiter();
		for(forthoploop = 0; customcolnum >= (forthoploop);){
		System.out.println("Please enter your data for column " + (forthoploop +1) + " In row " + (sixoploop + 1));
		coldata.add (forthopscnr.nextLine());

		 ++forthoploop;
		 
		 
		}//Forth Operation END
		ArrayList<String> coldatacopy = new ArrayList<String>();
		coldatacopy = (ArrayList)coldata.clone();
		coldata.clear();
		++sixoploop;
		rowdata.add(coldatacopy);
		
}
		
	
	
	//Fifth Operation: Displays all data entered for the selected row
	System.out.println('\n' + "				" + rowdata);
	
	
	//Seventh Operation	
	//CSVWriter writer = new CSVWriter(new FileWriter("D://output.csv"));
	//TEST FOR NOW
		    try {
		      File myObj = new File("filename.txt");
		      if (myObj.createNewFile()) {
		        System.out.println("File created: " + myObj.getName());
		      } else {
		        System.out.println("File already exists.");
		      }
		    } catch (IOException e) {
		      System.out.println("An error occurred.");
		      e.printStackTrace();
		    }  
	
		    try {
		        FileWriter myWriter = new FileWriter("filename.txt");
		        myWriter.write("Files in Java might be tricky, but it is fun enough!");
		        myWriter.close();
		        System.out.println("Successfully wrote to the file.");
		      } catch (IOException e) {
		        System.out.println("An error occurred.");
		        e.printStackTrace();
		      }
		



	



}//Main END
	
}//Class END




